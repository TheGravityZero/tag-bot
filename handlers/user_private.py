import os

from dotenv import find_dotenv, load_dotenv
load_dotenv(find_dotenv())

from aiogram import Bot, F, types, Router
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command, or_f
from aiogram.utils.formatting import (
    as_list,
    as_marked_section,
    Bold,
)
from sqlalchemy.ext.asyncio import AsyncSession
from database.orm_query import orm_get_products  # Italic, as_numbered_list –∏ —Ç–¥

from filters.chat_types import ChatTypeFilter

from kbds.reply import get_keyboard

user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(["private"]))


@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message, bot: Bot):
    text = """
–ó–∞–ª—ã —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏–π —É–∂–µ –≤—Å–µ –∑–Ω–∞—é—Ç –Ω–∞–∏–∑—É—Å—Ç—å, –∞ –Ω–∞ —É–ª–∏—Ü–µ –µ—â–µ –≥—Ä—è–∑–Ω–æ, —á—Ç–æ–±—ã —Å–Ω–∏–º–∞—Ç—å –∫–∞–π—Ñ–æ–≤—ã–π streetstyle?

–í –Ω–∞—à–µ–º —Ç–≥-–∫–∞–Ω–∞–ª–µ –∏ –Ω–∞ —Å–∞–π—Ç–µ –≤–∞—Å –∂–¥–µ—Ç –±–æ–ª–µ–µ 150 —Å—Ç–∏–ª—å–Ω—ã—Ö –º–µ—Å—Ç –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å—ä–µ–º–∫–∏.

–ü–æ—ç—Ç–æ–º—É —Å–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –∑–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ—á–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É –Ω–µ–æ–±—ã—á–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π –≤ —Ñ–µ–≤—Ä–∞–ª–µ!

–î–ª—è —ç—Ç–æ–≥–æ –≤ –º–µ–Ω—é –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å ¬´–õ–æ–∫–∞—Ü–∏–∏üéÅ¬ª"""
    photo_path = r"images\\preview.png"
    photo = types.FSInputFile(photo_path)
    await message.answer_photo(photo,
        caption=text,
        reply_markup=get_keyboard(
            "–ó–∞–±—Ä–∞—Ç—å üéÅ",
            "–•–æ—á—É –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —Ç–≥",
            "–î–æ—Å—Ç—É–ø –Ω–∞ 1 —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –º–µ—Å—è—Ü",
            "–î–æ—Å—Ç—É–ø –Ω–∞ 3 —É—Å–ø–µ—à–Ω—ã—Ö –º–µ—Å—è—Ü–∞üî•",
            "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å",
            placeholder="–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            sizes=(2, 2, 1)
        ),
    )
    #await message.answer_photo(photo)


# @user_private_router.message(F.text.lower() == "–º–µ–Ω—é")
@user_private_router.message(or_f(Command("locations"), (F.text.lower().contains("–ª–æ–∫–∞—Ü–∏–∏"))))
async def locations_cmd(message: types.Message, session: AsyncSession):
#    for product in await orm_get_products(session):
#        await message.answer_photo(
#            product.image,
#            caption=f"<strong>{product.name}\
#                    </strong>\n{product.description}\n–°—Ç–æ–∏–º–æ—Å—Ç—å: {round(product.price, 2)}",
#        )
    text = "–ª–æ–∫–∞—Ü–∏–∏:"
    await message.answer(text)


@user_private_router.message(F.text.lower() == "—Ö–æ—á—É –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —Ç–≥")
@user_private_router.message(Command("about"))
async def about_cmd(message: types.Message):
    text = """–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –≤–µ—Å–Ω–∞ –∏ –º—ã –≤—Å–µ –Ω–∞—á–Ω–µ–º –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å—ä–µ–º–∫–∏ –Ω–∞ —É–ª–∏—Ü–∞—Ö

–í –Ω–∞—à–µ–º —Ç–≥-–∫–∞–Ω–∞–ª–µ –∏ –Ω–∞ —Å–∞–π—Ç–µ —Ç–µ–±—è –∂–¥–µ—Ç –±–æ–ª–µ–µ 100 —Å—Ç–∏–ª—å–Ω—ã—Ö –º–µ—Å—Ç –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å—ä–µ–º–∫–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.

–í—Å–µ –ª–æ–∫–∞—Ü–∏–∏ –º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —É–¥–æ–±–Ω—ã–º —Ç–µ–≥–∞–º –¥–ª—è –ë–´–°–¢–†–û–ì–û –ø–æ–∏—Å–∫–∞

–ò –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ (–æ—Ç –ø–∞—Ä–∫–æ–≤–æ–∫ –¥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤)

–ù—É –∏ –∫–æ–Ω–µ—á–Ω–æ –≤–µ–∑–¥–µ –º—ã –ø–∏—à–µ–º –Ω–∞—à–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –∞—Ä–µ–Ω–¥–∞, –∫–∞–∫ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è, –∫–æ–º—É –ø–∏—Å–∞—Ç—å –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ!

–ö–ù–û–ü–ö–ê ¬´–¥–æ—Å—Ç—É–ø –Ω–∞ 3 —É—Å–ø–µ—à–Ω—ã—Ö –º–µ—Å—è—Ü–∞¬ª + —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É 3-–µ—Ö –º–µ—Å—è—Ü–µ–≤

- _–ü–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–Ω–∞ —Ä–æ–≤–Ω–æ 3 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –º–µ—Å—è—Ü–∞ —Å–æ –¥–Ω—è –æ–ø–ª–∞—Ç—ã –≤ –±–æ—Ç–µ (–∏–ª–∏ 1 –º–µ—Å—è—Ü, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∞—Ä–∏—Ñ–∞). –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤—ã –æ–ø–ª–∞—Ç–∏–ª–∏ 15 —Ñ–µ–≤—Ä–∞–ª—è, —Å–ª–µ–¥—É—é—â–µ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç 15 –º–∞—è –ø–æ —Ç–∞—Ä–∏—Ñ—É ¬´3 —É—Å–ø–µ—à–Ω—ã—Ö –º–µ—Å—è—Ü–∞¬ª –ö —ç—Ç–æ–º—É –º–æ–º–µ–Ω—Ç—É –Ω–∞ –∫–∞–Ω–∞–ª–µ —É–∂–µ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Å!_

- _–ó–∞ 1 –¥–µ–Ω—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞—à –±–æ—Ç –≤–∞–º –Ω–∞–ø–æ–º–Ω–∏—Ç –æ —Å–ø–∏—Å–∞–Ω–∏–∏, –ø–æ—ç—Ç–æ–º—É –Ω–µ –±–ª–æ–∫–∏—Ä—É–π—Ç–µ –Ω–∞—Å_"""
    await message.answer(text, parse_mode='Markdown')


@user_private_router.message(F.text.lower() == "–¥–æ—Å—Ç—É–ø –Ω–∞ 1 —Å—á–∞—Å—Ç–ª–∏–≤—ã–π –º–µ—Å—è—Ü")
@user_private_router.message(Command("sub_month"))
async def subscriptions_cmd(message: types.Message, bot: Bot):
    text = """–î–ª—è –∫—Ä–µ–∞—Ç–æ—Ä–æ–≤, smm-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –±–ª–æ–≥–µ—Ä–æ–≤, –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤

–ë–æ–ª–µ–µ 150 –ª–æ–∫–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Å—ä–µ–º–æ–∫
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é —Å—ä–µ–º–æ–∫ –Ω–∞ –ª–æ–∫–∞—Ü–∏–∏
–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ª–æ–∫–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º #—Ç–µ–≥–∞–º
–ù–æ–≤—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü
"""
    invoice = types.LabeledPrice(label='RUB', amount=10000)
    photo_path = r"images\\month.png"
    photo = types.FSInputFile(photo_path)
    
    await message.answer_photo(photo)
    await bot.send_invoice(
    message.chat.id,
    title="–î–æ—Å—Ç—É–ø –Ω–∞ –º–µ—Å—è—Ü",
    description=text,
    provider_token=os.getenv('PAYMENTS_PROVIDER_TOKEN'),
    currency='RUB',
    #photo_url=TIME_MACHINE_IMAGE_URL,
    #photo_height=512,  # !=0/None, –∏–Ω–∞—á–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –ø–æ–∫–∞–∂–µ—Ç—Å—è
    #photo_width=512,
    #photo_size=512,
    is_flexible=False,  # True –µ—Å–ª–∏ –∫–æ–Ω–µ—á–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    prices=[invoice],
    start_parameter='test',
    payload='your_custom_payload'
    )


@user_private_router.message(F.text.lower() == "–¥–æ—Å—Ç—É–ø –Ω–∞ 3 —É—Å–ø–µ—à–Ω—ã—Ö –º–µ—Å—è—Ü–∞üî•")
@user_private_router.message(Command("sub_3_months"))
async def sub_3_months_cmd(message: types.Message, bot: Bot):
    text = "–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –≤–µ—Å–Ω–∞ –∏ –º—ã –≤—Å–µ –Ω–∞—á–Ω–µ–º –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å—ä–µ–º–∫–∏ –Ω–∞ —É–ª–∏—Ü–∞—Ö –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞\n\n\
–ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É —Ç–∞—Ä–∏—Ñ –Ω–∞ 3 –º–µ—Å—è—Ü–∞ –ø—Ä–æ—Å—Ç–æ –º–∞—Å—Ç —Ö–µ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–µ–∞—Ç–æ—Ä–∞!"
    invoice = types.LabeledPrice(label='RUB', amount=10000)
    photo_path = r"images\\months.png"
    photo = types.FSInputFile(photo_path)
    
    await message.answer_photo(photo)
    await bot.send_invoice(
    message.chat.id,
    title="–î–æ—Å—Ç—É–ø –Ω–∞ –º–µ—Å—è—Ü",
    description=text,
    provider_token=os.getenv('PAYMENTS_PROVIDER_TOKEN'),
    currency='RUB',
    #photo_url=TIME_MACHINE_IMAGE_URL,
    #photo_height=512,  # !=0/None, –∏–Ω–∞—á–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –ø–æ–∫–∞–∂–µ—Ç—Å—è
    #photo_width=512,
    #photo_size=512,
    is_flexible=False,  # True –µ—Å–ª–∏ –∫–æ–Ω–µ—á–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    prices=[invoice],
    start_parameter='test',
    payload='your_custom_payload'
    )


@user_private_router.message(F.text.lower() == "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
@user_private_router.message(Command("questions"))
async def shipping_cmd(message: types.Message):
    text = "–ö–æ–Ω—Ç–∞–∫—Ç—ã: @taglocation"
    await message.answer(text)



@user_private_router.pre_checkout_query()
async def pre_checkout_query_handler(query: types.PreCheckoutQuery, bot: Bot):
    await bot.answer_pre_checkout_query(query.id, ok=True)

# @user_private_router.message(F.contact)
# async def get_contact(message: types.Message):
#     await message.answer(f"–Ω–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω")
#     await message.answer(str(message.contact))


# @user_private_router.message(F.location)
# async def get_location(message: types.Message):
#     await message.answer(f"–ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞")
#     await message.answer(str(message.location))
